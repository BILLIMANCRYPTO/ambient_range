import pyAesCrypt
import os
import requests
import pandas as pd
from datetime import datetime
import time
from colorama import Fore, Style, init
import telebot

# Initialize Colorama
init(autoreset=True)

# –ü–∞—Ä–æ–ª—å –¥–ª—è –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –∫–æ—à–µ–ª—å–∫–∞–º–∏
password = ""  # –í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞ –≤–∞—à –ø–∞—Ä–æ–ª—å

# –î–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ—à–µ–ª—å–∫–∞–º–∏
bufferSize = 64 * 1024
pyAesCrypt.decryptFile("wallets.txt.aes", "wallets_decrypted.txt", password, bufferSize)

# –ß—Ç–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤ –∫–æ—à–µ–ª—å–∫–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
with open("wallets_decrypted.txt") as file:
    wallets = [line.strip() for line in file]

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ —á—Ç–µ–Ω–∏—è
os.remove("wallets_decrypted.txt")

# Telegram bot token and chat ID
telegram_token = '' # Api key —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ https://t.me/BotFather
chat_id = '' # —Å–≤–æ–π chatid https://t.me/chatIDrobot

# Initialize Telegram bot
bot = telebot.TeleBot(telegram_token)

# API URL
base_url = "https://ambindexer.net/scroll-gcgo/user_positions"

def convert_timestamp(timestamp):
    return datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M:%S')

def check_positions():
    for wallet in wallets:
        params = {
            'user': wallet,
            'chainId': '0x82750',
            'ensResolution': 'true',
            'annotate': 'true',
            'omitEmpty': 'true',
            'omitKnockout': 'true',
            'addValue': 'true'
        }

        response = requests.get(base_url, params=params)
        response_data = response.json()

        for position in response_data.get('data', []):
            concLiq = position.get('concLiq', 0)
            if concLiq == 0:
                continue  # Skip processing if concLiq is 0

            aprEst = position.get('aprEst', 'N/A')
            timeFirstMint = position.get('timeFirstMint', 0)
            wallet_address = position.get('user', wallet)

            if aprEst == 0:
                print("üü• Out Range üü•")
                message = f"üü• {wallet_address} - Ambient: [Position Opened {convert_timestamp(timeFirstMint)}]-üü• Out Range üü•"

                bot.send_message(chat_id, message)
            else:
                print("üü¢ In Range üü¢")
                message = f"üü¢ {wallet_address} - Ambient: [Position Opened {convert_timestamp(timeFirstMint)}]-üü¢ In Range üü¢"

                # Commented out the line to avoid sending "In Range" messages
                # bot.send_message(chat_id, message)

while True:
    check_positions()
    time.sleep(10*60*60)  # –ù–∞—Å—Ç—Ä–æ–π —á–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–ª–∞ 60*60 = 1 —á–∞—Å , 20*60*60 = 20 —á–∞—Å–æ–≤ –∏ —Ç–¥ –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏ —á–∏—Å–ª–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö 600 = 10 –º–∏–Ω—É—Ç